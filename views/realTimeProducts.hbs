<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <title>Lista de Productos en Tiempo Real</title>
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/black-dashboard@1.0.0-alpha3/css/black-dashboard.css"
    />
    <link rel="stylesheet" href="../public/assets/css/black-dashboard.css">
  </head>
  <body>
    <div class="wrapper">
      <div class="sidebar">
        <!-- Sidebar content here -->
      </div>
      <div class="main-panel">
        <div class="content">
          <h1 class="title">Lista de Productos en Tiempo Real</h1>
          <ul id="productList" class="product-list"></ul>
          <form id="productForm" class="product-form">
            <input
              type="text"
              name="name"
              placeholder="Nombre del Producto"
              class="form-control"
            />
            <button type="submit" class="btn btn-primary">Agregar Producto</button>
          </form>
        </div>
        <footer class="footer">
          <!-- Footer content here -->
        </footer>
      </div>
    </div>

    <script src="/socket.io/socket.io.js"></script>
    <script>
      const socket = io();

      // Actualizar la lista de productos en la vista en tiempo real
      socket.on('updateProducts', (products) => {
        const productList = document.getElementById("productList");
        productList.innerHTML = "";

        products.forEach((product) => {
          const listItem = document.createElement("li");
          listItem.textContent = `${product.name} - ${product.price}`;
          productList.appendChild(listItem);
        });
      });

      const productForm = document.getElementById("productForm");
      productForm.addEventListener("submit", (e) => {
        e.preventDefault();
        const productName = document.querySelector('input[name="name"]').value;
        socket.emit("addProduct", productName);
        productForm.reset();
      });

      // Establecer conexiÃ³n con el servidor WebSocket
      const socket = io();

      // Solicitar la lista de productos al servidor
      socket.emit("getProducts");

      // Recibir la lista de productos del servidor
      socket.on("products", (products) => {
        console.log(products);
      });
    </script>
  </body>
</html>
